17:03 2013-08-11
Here's a fun programming philosophy problem: should "lua_isnumber()" return "true" for NaN?

17:16 2013-08-11
Design note: I could, at some points, pass the realTime value to Lua.
I've chosen not to do so to minimize the complexity of the Lua-C interface.

13:30 2013-08-14
Preliminary decision tree:

If a party member is in combat, attack the tank's target.
* Tanks: if a non-tank is being attacked, taunt the attacker.
** or use another high-threat ability,
** or a regular attack.
* Healers: if a member has lost enough health
  that our most efficient (hp/mana) healing spell will not overheal, use that spell.
** todo: have some provision for extra healing (useful in high-damage situations).
* All: focus attacks on marked targets. This takes priority over the "tank's target" rule.
* Mage: polymorph Moon.
* Rogue: sap Diamond. (only works if target is not in combat.)

User should set Diamond first, then Moon, then Skull.
Diamond will take effect only when Skull is set.
Also, if Diamond is set, Moon and Skull will not take effect until Diamond has been sapped,
or combat has started for some other reason.
If Diamond is not set, Moon will still not take effect until combat has started.
Setting Skull will cause tank to Charge to that target, gaining initial aggro and starting combat.

Attack choices:
* Cast the most useful spell that you have enough power for.
* If you have no useful spells, start melee.
* The usefulness of a spell is measured in damage per power.
* For example, a spell that does more damage then the target has health, loses some usefulness.
* Spells that have cast time, or do Damage over Time (DoT), or do damage after some delay,
	will have to calculate how long the target is likely to survive, based on past group DPS.
** For that reason, we should store, in a fifo queue, DPS for the X(5) last fights, calculated thus:
*** (TimeOfDeath - TimeOfAggro) / Health.
*** Not good for multiple enemies... except if you modify the value a bit:
*** (TimeOfLeavingCombat - TimeOfEnteringCombat) / SumHealthOfAllInvolvedEnemies.
** Average group DPS is then calculated from the X last fights.

Advanced combat choices:
* Interrupt enemy casters.
* Stun enemies.
* Dispel debuffs on allies.
* Mana burn.
* Innervate.
* Silence.
* Resurrection.
* Pickpocket.
** Possible to do in-combat, if you're stealthed, according to 1.12.
** Resist chance is supposed to be 5% at equal level, so go ahead and do it to all targets, even elites.
*** On resist, party can bail you out. :)
* and other effects.

If not in combat:
* Quests
** If a quest can be turned in within X yards without aggroing any enemies, do so.
*** X = 40?
** If leader has picked up a quest, and you don't have it, pick up that quest.
** todo: deal with class and profession quests.
* AutoQuestGet:
** Go to closest quest giver with available quests and get their quests.
** This behaviour can be turned off "aqg off" or on. Reply "Ack: AutoQuestGet <off|on>".
** Store this var to disk, load on startup.
* Command "gq" GetQuests:
** Get quests from commander's target. Reply Ack.
** Error if no target or if target has nothing to give.
* If bot has finished class or profession quests, remind leader on completion and every X minutes.
** X = 5?

* No need for an "attack" command; Skull raid target is enough.

* Gathering
** If a gathering node is nearby and it can be accessed without aggroing, do so.
*** Notify party of nodes guarded by hostiles. Leader may choose to engage the hostiles and thus clear the node.
** Skinning: unless party is in combat with an elite, skin any downed mobs as soon as they are cleared of loot.
** Fishing: normal gathering; get all nodes, or ask for clearing.
*** If fishing water is nearby and party is not moving, go fish.
** Keep Looting at FFA. That way, each bot with a gathering profession can gather any mats that drop.
*** Actually, if loot-haver opens the corpse and closes it, it becomes FFA.
*** Still, it is better to keep it FFA from the beginning.

* Looting
** Loot whatever is useful for your professions and quests.
** In round-robin styles, be sure to at least open every corpse, to make it FFA for the others.
** Loot class-specific items for your class.
** Other items (trash, whites, greens+) should be left for the leader.
** Certain situations can lead to lots of corpses in one place,
	making it hard for a human to loot them all.
	There should be a command to have a bot loot everything in a small (10-20 yards) area.

* Crafting
** When new mats are aquired: check if any new recipes can be crafted. If so, notify party.
** If a quest requires crafted items, craft them only when all mats for all items for that quest are available.
*** Also, require permission from leader before starting craft.
** todo: handle automatic leveling up.
** todo: handle equipment requests from party members.

* Trading
** Accept all incoming trades. No need to offer anything in return.
** Give money or items on command.
** On item get, equip it, if it's better. In either case, tell giver.

* Idle movement, only effective if nothing else is being done.
** If leader is >FOLLOW_DIST from us, run to him.
** If leading is walking and within FOLLOW_DIST*2, we too should be walking.
** Attempt to stay FOLLOW_DIST/2 away from every party member, excluding leader.
*** This should cause a decent emergent formation.

23:28 2013-08-29
Send CMSG_QUESTGIVER_STATUS_MULTIPLE_QUERY to get SMSG_QUESTGIVER_STATUS_MULTIPLE for every giver in range.

18:05 2013-09-07
There should be a command to place an equipped item on lockdown,
so that it doesn't get automatically replaced by "better" items.
Bot should then ask commander whenever it gets a new item that would be better.

00:39 2013-09-09
looting: see UNIT_DYNFLAG_LOOTABLE.
CORPSE_DYNFLAG_LOOTABLE only applies to player corpses in Battlegrounds.

00:57 2013-09-11
todo: fix spell effect after combat
todo: fix loot effect after combat

08:35 2013-09-12
todo: pickpocketing. Test it once we've trained the spell.

19:17 2013-09-14
Opening locks, such as those on chests, herbs, mining nodes or lockboxes,
that have a LockKeyType of LOCK_KEY_SKILL,
requires a spell with SPELL_EFFECT_OPEN_LOCK and a miscValue (enum LockType)
that matches the lock's lockInfo->Index.
LockKeyType LOCK_KEY_NONE can seemingly be opened by any OpenLock spell.
LockKeyType LOCK_KEY_ITEM requires an item whose entry/id is equal to the lock's
lockInfo->Index (not enum LockType in this case).

Therefore, when investigating gameobjects, compare their locks with your knownSpells
to find which ones you can open.

The gathering profession spells,
mining, herbalism, fishing(at marked nodes, not in open water), but not skinning,
work on this principle.

GAMEOBJECT_TYPE_ID is enum GameobjectTypes.
GAMEOBJECT_TYPE_CHEST, GAMEOBJECT_TYPE_FISHINGNODE and GAMEOBJECT_TYPE_FISHINGHOLE are interesting.
GAMEOBJECT_TYPE_FISHINGNODE is the bobber summoned by you.
GAMEOBJECT_TYPE_FISHINGHOLE are permanent GOs, collections of fish or junk that you can fish in.

Skinning is done by casting a spell with effect SPELL_EFFECT_SKINNING on a corpse with
UNIT_FIELD_FLAGS UNIT_FLAG_SKINNABLE.

00:17 2013-09-15
todo: train
ping gatherables
command auto-range, default 40
check hostiles in range 40
ex: "Guarded Copper Vein, 64 yards".

11:01 2013-09-17
todo:
item links
vendors
money update

20:03 2013-09-18
skill value update
cast [repeat]

00:30 2013-09-19
Fishing requires a spell and an equipped Fishing Pole.
It summons a NODE.
When the node is ready to be opened, SMSG_GAMEOBJECT_CUSTOM_ANIM is sent.
Open it with CMSG_GAMEOBJ_USE.
If it is not opened soon enough, SMSG_FISH_NOT_HOOKED is sent.
If your skill is not enough for the zone/hole, SMSG_FISH_ESCAPED is sent.

01:16 2013-09-19
todo:
* list known skill spells
* auto-cooking
** when near cooking fire, and have ingredients.
** lowest-level recipes first.
* auto-smelting, too.
** disable once Jewelcrafting becomes available; we'll want to prospect some of the ore.
* command to mark a quest-giver as off-limits.
** alternatively, make sure bots don't accept PvP quests.
* handle SPELL_FAILED_LINE_OF_SIGHT by requiring that the bot go closer to the target.
* auto-bank-store enchanting mats when they're created.
* Buff decision tends to get bots stuck and unresponsive until restart. Fix it.

22:18 2013-09-24
Enchantments include random properties.
Each enchantment has an ID, a key to SpellItemEnchantment.dbc.
See ApplyEnchantment.
ItemRandomPropertiesEntry
SpellItemEnchantmentEntry
